@import './css/vendors/open-props@1.4.16/open-props.min.css';
@import './css/vendors/open-props@1.4.16/normalize.min.css';
@import './css/vendors/open-props@1.4.16/normalize.min.css';

html {
  accent-color: var(--teal-6);
  font-family: var(--font-mono);
}

.main-container {
  min-height: 100vh;
  display: grid;
  place-items: center;
}

main {
  padding-block: 10vh;
  padding-inline: var(--size-6);
}

h2 {
  margin-block-end: var(--size-8);
}

nav {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  background: var(--surface-1);
  border-top: 1px solid var(--surface-4);
  z-index: 1; /* not sure why this is needed */
}

nav ul {
  padding: var(--size-2);
  font-size: var(--font-size-0);
  list-style: none;
  display: flex;
  gap: var(--size-4);
  justify-content: space-evenly;
  align-items: center;
}

nav li {
  padding: 0;
}

nav > ul > li + li {
  margin-top: 0;
}

nav a {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--size-1);
}

[aria-current] svg,
[aria-current] a,
[aria-current] a:visited {
  color: var(--teal-6);
  text-decoration: none;
}

nav a:visited,
nav a {
  color: var(--text-2);
}

nav a svg {
  width: 3ch;
  stroke: currentColor;
}

nav a[href="/statistics"] svg {
  width: 3ch;
  stroke: none;
}

.loading-error {
  max-width: 60ch;
}

.todolists-container {
  min-height: 90vh;
  display: flex;
  flex-wrap: wrap;
  align-items: baseline;
  gap: var(--size-10);
}

ul[role=list] {
  padding-inline-start: 0;
}

ul > li + li {
  margin-top: var(--size-3);
}

form input,
form label {
  display: block
}

button {
  padding: var(--size-2) var(--size-4);
  border-radius: var(--radius-2);
  box-shadow: var(--shadow-1);
}

input:not([type=checkbox]) {
  box-shadow: var(--inner-shadow-1);
}

form > * + * {
  margin-top: var(--size-4);
}


label + input:not([type=checkbox]) {
  margin-top: var(--size-2);
}

.todo {
  display: flex;
  gap: var(--size-1) var(--size-3);
  align-items: baseline;
}

/* the actual element being animated will be put outside of Elm's root so that the FLIP animation
 * can be run at the same time */
main .todo[data-animate=true] {
  opacity: 0;
}

.todo[data-animate=true] {
  animation: var(--animation-slide-out-up), var(--animation-fade-out) forwards;
  animation-timing-function: var(--easing-squish-5);
  animation-iteration-count: 1;
  animation-duration: 500ms;
}

.todo[data-animate=true] input[type=checkbox]{
  animation: var(--animation-ping);
  animation-duration: 500ms;
  animation-iteration-count: 1;
}

.todo > :nth-child(2) {
  display: flex;
  flex-wrap: wrap;
  gap: var(--size-2) var(--size-3);
  align-items: center;
}

.tag {
  font-size: var(--font-size-0);
  background: var(--pink-1);
  padding: 0 var(--size-2);
  border-radius: var(--radius-4);
  box-shadow: var(--shadow-1);
  white-space: nowrap;
}

.tag.user {
  background: var(--violet-1);
  color: var(--violet-9);
}
.tag.time-ago {
  background: var(--grape-1);
  color: var(--grape-9);
}
.tag.daily-2 {
  background: var(--blue-1);
  color: var(--blue-9);
}
.tag.weekly-4 {
  background: var(--cyan-1);
  color: var(--cyan-9);
}
.tag.weekly-2 {
  background: var(--teal-1);
  color: var(--teal-9);
}
.tag.weekly-1 {
  background: var(--green-1);
  color: var(--green-9);
}
.tag.weekly-2 {
  background: var(--lime-1);
  color: var(--lime-9);
}
.tag.monthly-1 {
  background: var(--yellow-1);
  color: var(--yellow-9);
}

.completion-tags {
  display: flex;
  flex-wrap: wrap;
  gap: var(--size-2);
}

.history-container {
  display: grid;
  place-items: center;
}

.history {
  padding-block-start: 15vh;
  min-height: 100vh;
}


td + td {
  padding: var(--size-2);
  vertical-align: baseline;
}

.notification-button {
  padding: 0;
  background: none;
}

.notification-button img {
  width: var(--size-4);
  height: var(--size-4);
}

.notification-button[data-active=false] :first-child {
  display: block;
}
.notification-button[data-active=false] :last-child {
  display: none;
}

.notification-button[data-active=true] :first-child {
  display: none;
}
.notification-button[data-active=true] :last-child {
  display: block;
}
.notification-button[data-activating=true] img {
  animation: var(--animation-spin);
  animation-timing-function: var(--ease-squish-5);
  animation-duration: 1s;
}

/* https://www.youtube.com/watch?v=R75ZVW4LW5o */
.toast-list {
  position: fixed;
  z-index: 1;
  inset-block-end: 0;
  inset-inline: 0;
  padding-block-end: 5vh;
  display: grid;
  justify-items: center;
  justify-content: center;
  gap: 1vh;
}

.toast {
  background: var(--red-9);
  color: var(--red-1);
  border-radius: var(--radius-1);
  padding: var(--size-1) var(--size-3);
  box-shadow: var(--shadow-6);
  max-inline-size: min(80ch, 90vw);
  opacity: 0;
  animation: var(--animation-fade-in) forwards, var(--animation-slide-in-up);
  animation-timing-function: var(--ease-out-4);
  animation-duration: 250ms;

  display: flex;
  gap: var(--size-4);
}

.toast button {
  padding: 0;
  text-decoration: underline;
  color: reset;
  background: none;
  font-size: var(--font-size-0);
}

.toast .message {
  font-size: var(--font-size-0);
}

.congrats-message-container {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.congrats-message {
  font-size: var(--font-size-4);
  background: var(--teal-9);
  color: white;
  padding: var(--size-3) var(--size-7);
  border-radius: var(--radius-2);
  box-shadow: var(--shadow-6);
  white-space: nowrap;
  opacity: 0;
  animation:
    var(--animation-fade-in) forwards,
    spin 1s var(--ease-squish-5),
    1s 0.5s float forwards,
    1s 1.5s fade-out forwards,
    1s 1.5s ping forwards;
}

/*******************
 * new task form
 *******************/

a.new-task-button:hover  {
  text-decoration: none;
}
a.new-task-button  {
  color: unset;
}
.new-task-button  {
  display: inline-block;
  padding-inline-start: var(--size-2);
  margin-top: var(--size-6);
  margin-left: 3ch;
  background: var(--surface-2);
  padding: var(--size-2) var(--size-4);
  border-radius: var(--radius-2);
  box-shadow: var(--shadow-1);
}

.new-task-form {
  display: flex;
  flex-direction: column;
  gap: var(--size-3);
}

.new-task-form input:not([type=radio]) {
  width: 100%;
}

.radio-field {
  display: flex;
  align-items: center;
  gap: var(--size-2);
}

fieldset > * + * {
  margin-top: var(--size-2);
}

.frequency-counter {
  display: flex;
  align-items: center;
  gap: var(--size-3);
}

.frequency-counter .counter-input {
  display: flex;
  align-items: center;
  box-shadow: var(--inner-shadow-1);
  background: var(--surface-2);
  padding: var(--size-2);
  gap: var(--size-3);
}

.frequency-counter button {
  padding: 0;
}

button[type=submit] {
  background: var(--teal-6);
  color: white;
}

.new-task-form button {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: var(--size-3);
}

.new-task-form button:not(.saving) svg {
  width: 0;
}

.new-task-form button svg {
  transition: width 100ms;
  width: 2ch;
  stroke: var(--teal-1);
  fill: none;
  animation: var(--animation-spin);
  animation-timing-function: var(--ease-2);
  animation-duration: 1s;
}

.statistics > * + * {
  margin-top: var(--size-4);
}

.statistics h2 {
  margin: 0;
  margin-bottom: var(--size-2);
  font-size: var(--font-size-1);
}

.statistics table {
  min-width: 25ch;
}

.statistics td:nth-child(2) {
  text-align: right;
}

.statistics td:nth-child(3) {
  position: relative;
  min-width: 10ch;
}

.statistics .points {
  position: absolute;
  top: var(--size-2);
  bottom: var(--size-2);
  background: var(--teal-4);
}
